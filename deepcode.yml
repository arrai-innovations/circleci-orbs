version: 2.1
description: Deepcode.ai intergration for detailed instructions see https://medium.com/@james_osgood/using-deepcodeai-in-a-ci-pipeline-dac62c4b64bf
orbs:
  utils: arrai/utils@1.5.0
executors:
  python38:
    environment:
        LANG: C.UTF-8
    docker:
     - image: circleci/python:3.8
jobs:
  deepcode:
    parameters:
      wd:
        type: string
        default: ./${CIRCLE_PROJECT_REPONAME}
      files:
        type: string
        default: "."
      severity:
        description: "Minimum severity level."
        type: enum
        enum: ["info", "warning", "critical"]
        default: "info"
    executor: python38
    steps:
      - checkout
      - utils/add_ssh_config
      - run:
          name: Install additional OS packages
          command: sudo apt-get install rsync
      - run:
          name: Install DeepCode CLI
          command: |
            cd <<parameters.wd>>
            python3 -m venv ${HOME}/.venv/
            . ~/.venv/bin/activate
            echo "source ${HOME}/.venv/bin/activate" >> $BASH_ENV
            pip install deepcode
      - run:
          name: Run DeepCode CLI
          description: This runs deepcode on your project, ensure you have set the environment variable DEEPCODE_API_KEY.
          command: |
            cd <<parameters.wd>>
            deepcode analyze -sev <<parameters.severity>> -p <<parameters.files>> | tee results.json
      - run:
          name: Determine issue severity
          command: |
            SEVERITY="$(python -c 'import sys;import json;print(max([suggestion["severity"] for suggestion in json.load(open("results.json", "r"))["results"]["suggestions"].values()] or [0]))')"
            echo $SEVERITY
            if [ $SEVERITY -eq 1 ]; then
                STATUS_TEXT="info"
                STATUS_COLOUR="yellow"
            elif [ $SEVERITY -eq 2 ]; then
                STATUS_TEXT="warning"
                STATUS_COLOUR="orange"
            elif [ $SEVERITY -eq 3 ]; then
                STATUS_TEXT="critical"
                STATUS_COLOUR="red"
            else
                STATUS_TEXT="passed"
                STATUS_COLOUR="brightgreen"
            fi
            echo $STATUS_TEXT
            echo $STATUS_COLOUR
            echo "export DEEPCODE_STATUS_TEXT=$STATUS_TEXT" >> $BASH_ENV
            echo "export DEEPCODE_STATUS_COLOUR=$STATUS_COLOUR" >> $BASH_ENV
          when: always
      - utils/make_status_shield:
          status: ${DEEPCODE_STATUS_TEXT}
          color: ${DEEPCODE_STATUS_COLOUR}
          logo: circleci
          when: always
      - utils/rsync_file:
          file: ~/status.svg
          remote_file: $CIRCLE_BRANCH.$CIRCLE_JOB.svg
          host: docs
          when: always
