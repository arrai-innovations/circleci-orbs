version: 2.1
orbs:
    utils: arrai/utils@1.16.0
executors:
    python312:
        docker:
            - image: cimg/python:3.12
    python311:
        docker:
            - image: cimg/python:3.11
    python310:
        docker:
            - image: cimg/python:3.10
    python39:
        docker:
            - image: cimg/python:3.9
    python38:
        docker:
            - image: cimg/python:3.8
aliases:
    common_parameters: &common_parameters
        executor:
            description: "The executor to use for the job."
            type: executor
            default: python310
        resource_class:
            description: "The resource class to use for the job."
            type: enum
            enum: [small, medium, medium+, large, xlarge, 2xlarge, 2xlarge+]
            default: small
        config:
            description: "Any additional configuration steps."
            type: steps
            default: []
        setup:
            description: "Any additional setup steps."
            type: steps
            default: []
        create_badges:
            description: "Generate badges."
            type: boolean
            default: true
        ignored_vulnerabilities:
            description: "List of ignored vulnerabilities, e.g. '-i 123 -i 456'"
            type: string
            default: ""
        pipenv_cache_key_version:
            description: "a string that can be changed to bust the pipenv cache."
            type: string
            default: "1"
    common_steps: &common_steps
        - checkout
        - steps: <<parameters.setup>>
        - run:
              name: Keep track of the python version.
              command: |
                  python --version > /tmp/python.version
        - restore_cache: # ensure this step occurs *before* installing dependencies
              keys:
                  - pipenv-{{ checksum "/etc/os-release" }}-{{ checksum "/tmp/python.version" }}-<<parameters.pipenv_cache_key_version>>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
                  - pipenv-{{ checksum "/etc/os-release" }}-{{ checksum "/tmp/python.version" }}-<<parameters.pipenv_cache_key_version>>-{{ .Branch }}
                  - pipenv-{{ checksum "/etc/os-release" }}-{{ checksum "/tmp/python.version" }}-<<parameters.pipenv_cache_key_version>>-main
        - run:
              name: Set up python environment
              command: |
                  pip list --outdated --format=json | jq -r '.[]|.name' | xargs -r pip install -U
                  pipenv sync | cat; test ${PIPESTATUS[0]} -eq 0
        - save_cache:
              paths:
                  - ~/.local/share/virtualenvs/
              key: pipenv-{{ checksum "/etc/os-release" }}-{{ checksum "/tmp/python.version" }}-<<parameters.pipenv_cache_key_version>>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
        - steps: <<parameters.config>>
        - run:
              name: Run safety
              command: |
                  pipenv check <<parameters.ignored_vulnerabilities>>
        - when:
              condition: <<parameters.create_badges>>
              steps:
                  - utils/add_ssh_config
                  - run:
                        name: Install additional OS packages
                        command: |
                            sudo apt update
                            sudo apt install rsync
                  - utils/make_status_shield:
                        when: on_fail
                        status: errors
                        color: red
                        logo: python
                  - utils/make_status_shield:
                        when: on_success
                        status: passed
                        color: brightgreen
                        logo: python
                  - utils/rsync_file:
                        when: always
                        file: ~/status.svg
                        remote_file: ${CIRCLE_BRANCH}/${CIRCLE_JOB}.svg
                        host: docs
jobs:
    safety:
        parameters:
            <<: *common_parameters
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        circleci_ip_ranges: false
        environment:
            PIPENV_DONT_LOAD_ENV: 1
        steps: *common_steps
    safety_fixed_ip:
        parameters:
            <<: *common_parameters
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        circleci_ip_ranges: true
        environment:
            PIPENV_DONT_LOAD_ENV: 1
        steps: *common_steps
