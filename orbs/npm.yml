version: 2.1
orbs:
    utils: arrai/utils@1.13.0
executors:
    lts:
        environment:
            LANG: en_US.UTF-8
        docker:
            - image: cimg/node:lts
    current:
        environment:
            LANG: en_US.UTF-8
        docker:
            - image: cimg/node:current
    v18:
        environment:
            LANG: en_US.UTF-8
        docker:
            - image: cimg/node:18.18
    v20:
        environment:
            LANG: en_US.UTF-8
        docker:
            - image: cimg/node:20.9
commands:
    upgrade_npm:
        steps:
            - run:
                  name: "Install the latest npm"
                  command: |
                      if [ "$(which npm)" = "/usr/local/bin/npm" ]; then
                          sudo npm install -g --upgrade npm
                      else
                          npm install -g --upgrade npm
                      fi
jobs:
    audit:
        parameters:
            wd:
                type: string
                default: ~/project
            executor:
                type: executor
                default: lts
            resource_class:
                description: "The resource class to use for the job."
                type: enum
                enum: [small, medium, medium+, large, xlarge, 2xlarge, 2xlarge+]
                default: small
            setup:
                description: "Any additional setup steps."
                type: steps
                default:
                    - run:
                          name: "Install additional OS packages"
                          command: |
                              sudo apt update
                              sudo apt install rsync colorized-logs jq
            config:
                description: "Any additional configuration steps."
                type: steps
                default: []
            report_to:
                description: "E-mail address to send npm audit failure report to."
                type: string
                default: ""
            skip_dev:
                description: "Don't check development dependencies."
                type: boolean
                default: true
            create_badges:
                description: "Generate badges."
                type: boolean
                default: true
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        circleci_ip_ranges: true
        steps:
            - checkout
            - utils/add_ssh_config
            - steps: <<parameters.setup>>
            - upgrade_npm
            - utils/add_npm_config
            - steps: <<parameters.config>>
            - run:
                  name: "Run npm audit"
                  command: |
                      cd <<parameters.wd>>
                      npx -y better-npm-audit audit <<# parameters.skip_dev >> -p <</ parameters.skip_dev >> |& tee ~/audit.log
            - run:
                  name: "Generate HTML audit report"
                  when: on_fail
                  command: cat ${HOME}/audit.log | ansi2html > ${HOME}/audit.html
            - when:
                  condition: <<parameters.report_to>>
                  steps:
                      - utils/send_email:
                            when: on_fail
                            to: <<parameters.report_to>>
                            subject: "npm audit report for ${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}"
                            html: "<${HOME}/audit.html"
            - when:
                  condition: <<parameters.create_badges>>
                  steps:
                      - run:
                            name: "Count vulnerabilities"
                            when: on_fail
                            command: |
                                if [ -f ~/audit.log ]; then
                                    echo "export TOTAL_VULNERABILITIES=`tail -1 ~/audit.log | grep -Po '^(\d+)' --color=never`" >> $BASH_ENV
                                else
                                    echo "export TOTAL_VULNERABILITIES=?" >> $BASH_ENV
                                fi
                      - utils/make_status_shield:
                            when: on_fail
                            status: "${TOTAL_VULNERABILITIES}"
                            label: vulnerabilities
                            color: red
                            logo: npm
                      - utils/make_status_shield:
                            when: on_success
                            status: "0"
                            label: vulnerabilities
                            color: brightgreen
                            logo: npm
                      - utils/rsync_file:
                            when: always
                            file: ~/status.svg
                            remote_file: ${CIRCLE_BRANCH}/npm-audit.svg
                            host: docs
    coverage:
        parameters:
            wd:
                type: string
                default: ~/project
            executor:
                type: executor
                default: lts
            resource_class:
                description: "The resource class to use for the job."
                type: enum
                enum: [small, medium, medium+, large, xlarge, 2xlarge, 2xlarge+]
                default: medium
            setup:
                description: "Any additional setup steps."
                type: steps
                default:
                    - run:
                          name: "Install additional OS packages"
                          command: |
                              sudo apt update
                              sudo apt install rsync
            config:
                description: "Any additional configuration steps."
                type: steps
                default: []
            create_badges:
                description: "Generate badges."
                type: boolean
                default: true
            npm_run:
                description: "The npm run script to run."
                type: string
                default: coverage
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        circleci_ip_ranges: true
        steps:
            - checkout
            - utils/add_ssh_config
            - steps: <<parameters.setup>>
            - upgrade_npm
            - utils/add_npm_config
            - steps: <<parameters.config>>
            - run:
                  name: "Install Packages"
                  command: |
                      npm ci
            - steps: <<parameters.config>>
            - run:
                  name: "Run Tests"
                  command: |
                      npm run <<parameters.npm_run>>
            - utils/rsync_folder:
                  when: always
                  folder: ./coverage/
                  remote_folder: ${CIRCLE_BRANCH}/coverage_${CIRCLE_JOB}
                  host: docs
            - when:
                  condition: <<parameters.create_badges>>
                  steps:
                      - utils/make_status_shield:
                            when: on_fail
                            status: errors
                            color: red
                            logo: Node.js
                      - utils/make_status_shield:
                            when: on_success
                            status: passed
                            color: brightgreen
                            logo: Node.js
                      - utils/rsync_file:
                            when: always
                            file: ~/status.svg
                            remote_file: ${CIRCLE_BRANCH}/${CIRCLE_JOB}.svg
                            host: docs
                      - run:
                            name: "Create coverage report"
                            when: always
                            command: |
                                jq 'if .total.branches.pct != "Unknown" and .total.statements.pct != "Unknown" then ((.total.branches.pct + .total.statements.pct) / 2) else 0 end | floor' coverage/coverage-summary.json >> /tmp/.coveragep
                      - utils/make_coverage_shield:
                            when: always
                            link: https://${DOCS_HOST}/${CIRCLE_PROJECT_REPONAME}/artifacts/${CIRCLE_BRANCH}/coverage_${CIRCLE_JOB}/
                      - utils/rsync_file:
                            when: always
                            file: /tmp/coverage.svg
                            remote_file: ${CIRCLE_BRANCH}/${CIRCLE_JOB}.coverage.svg
                            host: docs
    publish:
        parameters:
            wd:
                type: string
                default: ~/project
            executor:
                type: executor
                default: lts
            resource_class:
                description: "The resource class to use for the job."
                type: enum
                enum: [small, medium, medium+, large, xlarge, 2xlarge, 2xlarge+]
                default: small
            setup:
                description: "Any additional setup steps."
                type: steps
                default: []
            config:
                description: "Any additional configuration steps."
                type: steps
                default: []
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        steps:
            - checkout
            - steps: <<parameters.setup>>
            - upgrade_npm
            - utils/add_npm_config
            - run:
                  name: "Install Packages"
                  command: |
                      npm ci
            - steps: <<parameters.config>>
            - run:
                  name: "Publish to npm"
                  command: |
                      npm publish
