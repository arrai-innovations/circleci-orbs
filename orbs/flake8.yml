version: 2.1
orbs:
    utils: arrai/utils@1.15.0
executors:
    python312:
        docker:
            - image: cimg/python:3.12
    python311:
        docker:
            - image: cimg/python:3.11
    python310:
        docker:
            - image: cimg/python:3.10
    python39:
        docker:
            - image: cimg/python:3.9
    python38:
        docker:
            - image: cimg/python:3.8
aliases:
    common_parameters: &common_parameters
        flake8_cmd:
            description: "The flake8 command to use; allows for alternatives (e.g. pflake)."
            type: string
            default: "flake8"
        wd:
            description: "The working directory for the job."
            type: string
            default: ./${CIRCLE_PROJECT_REPONAME}
        executor:
            description: "The executor to use for the job."
            type: executor
            default: python38
        resource_class:
            description: "The resource class to use for the job."
            type: enum
            enum: [small, medium, medium+, large, xlarge, 2xlarge, 2xlarge+]
            default: small
        setup:
            description: "Any additional setup steps."
            type: steps
            default: []
        create_badges:
            description: "Generate badges."
            type: boolean
            default: true
    common_badge_upload: &common_badge_upload
        - utils/add_ssh_config
        - utils/make_status_shield:
              when: on_fail
              status: errors
              color: red
              logo: python
        - utils/make_status_shield:
              when: on_success
              status: passed
              color: brightgreen
              logo: python
        - utils/rsync_file:
              when: always
              file: ~/status.svg
              remote_file: $CIRCLE_BRANCH/$CIRCLE_JOB.svg
              host: docs
    common_flake8_steps: &common_flake8_steps
        - checkout
        - steps: <<parameters.setup>>
        - setup_flake8:
              wd: <<parameters.wd>>
              additional_packages: <<parameters.additional_packages>>
        - flake8_errors:
              flake8_cmd: <<parameters.flake8_cmd>>
              wd: <<parameters.wd>>
        - when:
              condition: <<parameters.create_badges>>
              steps: *common_badge_upload
    common_flake8_pipenv_steps: &common_flake8_pipenv_steps
        - checkout
        - steps: <<parameters.setup>>
        - setup_flake8_pipenv:
              wd: <<parameters.wd>>
              pipenv_meta_job_name: <<parameters.pipenv_meta_job_name>>
              pipenv_cache_key_version: <<parameters.pipenv_cache_key_version>>
        - flake8_errors_pipenv:
              flake8_cmd: <<parameters.flake8_cmd>>
              wd: <<parameters.wd>>
        - when:
              condition: <<parameters.create_badges>>
              steps: *common_badge_upload
jobs:
    flake8:
        parameters:
            <<: *common_parameters
            additional_packages:
                description: "Allows installing additional packages or requirements.txt files."
                type: string
                default: ""
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        circleci_ip_ranges: false
        steps: *common_flake8_steps
    flake8_fixed_ip:
        parameters:
            <<: *common_parameters
            flake8_cmd:
                description: "The flake8 command to use; allows for alternatives (e.g. pflake)."
                type: string
                default: "flake8"
            additional_packages:
                description: "Allows installing additional packages or requirements.txt files."
                type: string
                default: ""
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        circleci_ip_ranges: true
        steps: *common_flake8_steps
    flake8_pipenv:
        parameters:
            <<: *common_parameters
            pipenv_meta_job_name:
                description: "a test job's meta job name for sharing pipenv cache."
                type: string
            pipenv_cache_key_version:
                description: "a string that can be changed to bust the pipenv cache."
                type: string
                default: "1"
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        circleci_ip_ranges: false
        environment:
            PIPENV_DONT_LOAD_ENV: 1
        steps: *common_flake8_pipenv_steps
    flake8_pipenv_fixed_ip:
        parameters:
            <<: *common_parameters
            pipenv_meta_job_name:
                description: "a test job's meta job name for sharing pipenv cache."
                type: string
            pipenv_cache_key_version:
                description: "a string that can be changed to bust the pipenv cache."
                type: string
                default: "1"
        executor: <<parameters.executor>>
        resource_class: <<parameters.resource_class>>
        circleci_ip_ranges: true
        environment:
            PIPENV_DONT_LOAD_ENV: 1
        steps: *common_flake8_pipenv_steps
commands:
    setup_flake8:
        description: "Set up a python virtual environment to run flake8"
        parameters:
            wd:
                type: string
            additional_packages:
                type: string
        steps:
            - run:
                  name: "Set up python virtual environment."
                  command: |
                      cd <<parameters.wd>>
                      python3 -m venv ${HOME}/.venv/
                      . ~/.venv/bin/activate
                      echo "source ${HOME}/.venv/bin/activate" >> $BASH_ENV
                      if [ -f flake8_requirements.txt ]; then
                          pip install -r flake8_requirements.txt <<parameters.additional_packages>> | cat; test ${PIPESTATUS[0]} -eq 0
                      else
                          pip install flake8 <<parameters.additional_packages>> | cat; test ${PIPESTATUS[0]} -eq 0
                      fi
    flake8_errors:
        description: "Run flake8, checking for errors only."
        parameters:
            flake8_cmd:
                type: string
                default: "flake8"
            wd:
                type: string
        steps:
            - run:
                  name: "Check for errors."
                  command: |
                      cd <<parameters.wd>>
                      <<parameters.flake8_cmd>>
    setup_flake8_pipenv:
        description: "Set up a python virtual environment to run flake8"
        parameters:
            wd:
                type: string
            pipenv_meta_job_name:
                description: "a test job's meta job name for sharing pipenv cache."
                type: string
            pipenv_cache_key_version:
                description: "a string that can be changed to bust the pipenv cache."
                type: string
        steps:
            - restore_cache: # ensure this step occurs *before* installing dependencies
                  keys:
                      - pipenv-{{ checksum "/etc/os-release" }}-<<parameters.pipenv_meta_job_name>>-<<parameters.pipenv_cache_key_version>>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
                      - pipenv-{{ checksum "/etc/os-release" }}-<<parameters.pipenv_meta_job_name>>-<<parameters.pipenv_cache_key_version>>-{{ .Branch }}
                      - pipenv-{{ checksum "/etc/os-release" }}-<<parameters.pipenv_meta_job_name>>-<<parameters.pipenv_cache_key_version>>-main
            - run:
                  name: "Set up python virtual environment."
                  command: |
                      cd <<parameters.wd>>
                      pipenv sync --dev | cat; test ${PIPESTATUS[0]} -eq 0
            - save_cache:
                  paths:
                      - ~/.local/share/virtualenvs/
                  key: pipenv-{{ checksum "/etc/os-release" }}-<<parameters.pipenv_meta_job_name>>-<<parameters.pipenv_cache_key_version>>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
    flake8_errors_pipenv:
        description: "Run flake8, checking for errors only."
        parameters:
            flake8_cmd:
                type: string
                default: "flake8"
            wd:
                type: string
        steps:
            - run:
                  name: "Check for errors."
                  command: |
                      cd <<parameters.wd>>
                      pipenv run <<parameters.flake8_cmd>>
